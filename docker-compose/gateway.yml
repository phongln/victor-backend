version: '3'
services:
  kong-db:
    container_name: kong-db
    image: postgres:latest
    networks:
      - kong-net
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE}
      POSTGRES_USER: ${KONG_PG_USER}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
    volumes:
      - kong_data:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER}"]
      interval: 30s
      timeout: 30s
      retries: 3

  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      - kong-db
    links:
      - kong-db:kong-db
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: kong-db
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    restart: on-failure

  kong-gate:
    container_name: kong-gate
    user: '${KONG_USER:-root}'
    image: kong:latest
    depends_on:
      - kong-db
      - kong-migrations
    links:
      - kong-db:kong-db
    networks:
      - kong-net
      - backend-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      # VIRTUAL_HOST: ${PROXY_GATEWAY}
      # VIRTUAL_PORT: '8000'
    ports:
      - '8000:8000/tcp'
      - '8001:8001/tcp'
      - '8443:8443/tcp'
      - '8444:8444/tcp'
    restart: on-failure
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  konga-migrations:
    container_name: konga-migrations
    image: pantsel/konga:latest
    command: '-c prepare -a postgres -u postgresql://${KONG_PG_USER}:${KONG_PG_PASSWORD}@kong-db/${KONGA_DB}'
    networks:
      - kong-net
    links:
      - kong-db:kong-db
    depends_on:
      - kong-db
      - kong-migrations
    restart: on-failure

  konga:
    container_name: konga
    image: pantsel/konga:latest
    depends_on:
      - kong-db
      - konga-migrations
    networks:
      - kong-net
      - backend-net
    # ports:
    #   - '1337:1337/tcp'
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_DATABASE: ${KONGA_DB}
      DB_USER: ${KONG_PG_USER}
      DB_PASSWORD: ${KONG_PG_PASSWORD}
      NODE_ENV: production
      VIRTUAL_HOST: ${PROXY_KONGA}
    restart: on-failure

volumes:
  kong_data:
    external: true

networks:
  kong-net:
  backend-net:
    external: true
